/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.esper2Maude.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.esper2Maude.Esper2MaudePackage;
import org.xtext.example.mydsl.esper2Maude.FilterEvent;
import org.xtext.example.mydsl.esper2Maude.FilterOperator;
import org.xtext.example.mydsl.esper2Maude.WhereFilter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Where Filter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getFilterEventL <em>Filter Event L</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getFilterOpL <em>Filter Op L</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getTimer <em>Timer</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getNum <em>Num</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getFilterOpR <em>Filter Op R</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.WhereFilterImpl#getFilterEventR <em>Filter Event R</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WhereFilterImpl extends MinimalEObjectImpl.Container implements WhereFilter
{
  /**
   * The cached value of the '{@link #getFilterEventL() <em>Filter Event L</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterEventL()
   * @generated
   * @ordered
   */
  protected FilterEvent filterEventL;

  /**
   * The cached value of the '{@link #getFilterOpL() <em>Filter Op L</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterOpL()
   * @generated
   * @ordered
   */
  protected FilterOperator filterOpL;

  /**
   * The default value of the '{@link #getTimer() <em>Timer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimer()
   * @generated
   * @ordered
   */
  protected static final String TIMER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTimer() <em>Timer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimer()
   * @generated
   * @ordered
   */
  protected String timer = TIMER_EDEFAULT;

  /**
   * The default value of the '{@link #getNum() <em>Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum()
   * @generated
   * @ordered
   */
  protected static final int NUM_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNum() <em>Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNum()
   * @generated
   * @ordered
   */
  protected int num = NUM_EDEFAULT;

  /**
   * The cached value of the '{@link #getFilterOpR() <em>Filter Op R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterOpR()
   * @generated
   * @ordered
   */
  protected FilterOperator filterOpR;

  /**
   * The cached value of the '{@link #getFilterEventR() <em>Filter Event R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterEventR()
   * @generated
   * @ordered
   */
  protected FilterEvent filterEventR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WhereFilterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Esper2MaudePackage.Literals.WHERE_FILTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FilterEvent getFilterEventL()
  {
    return filterEventL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterEventL(FilterEvent newFilterEventL, NotificationChain msgs)
  {
    FilterEvent oldFilterEventL = filterEventL;
    filterEventL = newFilterEventL;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L, oldFilterEventL, newFilterEventL);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilterEventL(FilterEvent newFilterEventL)
  {
    if (newFilterEventL != filterEventL)
    {
      NotificationChain msgs = null;
      if (filterEventL != null)
        msgs = ((InternalEObject)filterEventL).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L, null, msgs);
      if (newFilterEventL != null)
        msgs = ((InternalEObject)newFilterEventL).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L, null, msgs);
      msgs = basicSetFilterEventL(newFilterEventL, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L, newFilterEventL, newFilterEventL));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FilterOperator getFilterOpL()
  {
    return filterOpL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterOpL(FilterOperator newFilterOpL, NotificationChain msgs)
  {
    FilterOperator oldFilterOpL = filterOpL;
    filterOpL = newFilterOpL;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L, oldFilterOpL, newFilterOpL);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilterOpL(FilterOperator newFilterOpL)
  {
    if (newFilterOpL != filterOpL)
    {
      NotificationChain msgs = null;
      if (filterOpL != null)
        msgs = ((InternalEObject)filterOpL).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L, null, msgs);
      if (newFilterOpL != null)
        msgs = ((InternalEObject)newFilterOpL).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L, null, msgs);
      msgs = basicSetFilterOpL(newFilterOpL, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L, newFilterOpL, newFilterOpL));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTimer()
  {
    return timer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTimer(String newTimer)
  {
    String oldTimer = timer;
    timer = newTimer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__TIMER, oldTimer, timer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getNum()
  {
    return num;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNum(int newNum)
  {
    int oldNum = num;
    num = newNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__NUM, oldNum, num));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FilterOperator getFilterOpR()
  {
    return filterOpR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterOpR(FilterOperator newFilterOpR, NotificationChain msgs)
  {
    FilterOperator oldFilterOpR = filterOpR;
    filterOpR = newFilterOpR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R, oldFilterOpR, newFilterOpR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilterOpR(FilterOperator newFilterOpR)
  {
    if (newFilterOpR != filterOpR)
    {
      NotificationChain msgs = null;
      if (filterOpR != null)
        msgs = ((InternalEObject)filterOpR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R, null, msgs);
      if (newFilterOpR != null)
        msgs = ((InternalEObject)newFilterOpR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R, null, msgs);
      msgs = basicSetFilterOpR(newFilterOpR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R, newFilterOpR, newFilterOpR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FilterEvent getFilterEventR()
  {
    return filterEventR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterEventR(FilterEvent newFilterEventR, NotificationChain msgs)
  {
    FilterEvent oldFilterEventR = filterEventR;
    filterEventR = newFilterEventR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R, oldFilterEventR, newFilterEventR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilterEventR(FilterEvent newFilterEventR)
  {
    if (newFilterEventR != filterEventR)
    {
      NotificationChain msgs = null;
      if (filterEventR != null)
        msgs = ((InternalEObject)filterEventR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R, null, msgs);
      if (newFilterEventR != null)
        msgs = ((InternalEObject)newFilterEventR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R, null, msgs);
      msgs = basicSetFilterEventR(newFilterEventR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R, newFilterEventR, newFilterEventR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L:
        return basicSetFilterEventL(null, msgs);
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L:
        return basicSetFilterOpL(null, msgs);
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R:
        return basicSetFilterOpR(null, msgs);
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R:
        return basicSetFilterEventR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L:
        return getFilterEventL();
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L:
        return getFilterOpL();
      case Esper2MaudePackage.WHERE_FILTER__TIMER:
        return getTimer();
      case Esper2MaudePackage.WHERE_FILTER__NUM:
        return getNum();
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R:
        return getFilterOpR();
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R:
        return getFilterEventR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L:
        setFilterEventL((FilterEvent)newValue);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L:
        setFilterOpL((FilterOperator)newValue);
        return;
      case Esper2MaudePackage.WHERE_FILTER__TIMER:
        setTimer((String)newValue);
        return;
      case Esper2MaudePackage.WHERE_FILTER__NUM:
        setNum((Integer)newValue);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R:
        setFilterOpR((FilterOperator)newValue);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R:
        setFilterEventR((FilterEvent)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L:
        setFilterEventL((FilterEvent)null);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L:
        setFilterOpL((FilterOperator)null);
        return;
      case Esper2MaudePackage.WHERE_FILTER__TIMER:
        setTimer(TIMER_EDEFAULT);
        return;
      case Esper2MaudePackage.WHERE_FILTER__NUM:
        setNum(NUM_EDEFAULT);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R:
        setFilterOpR((FilterOperator)null);
        return;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R:
        setFilterEventR((FilterEvent)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_L:
        return filterEventL != null;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_L:
        return filterOpL != null;
      case Esper2MaudePackage.WHERE_FILTER__TIMER:
        return TIMER_EDEFAULT == null ? timer != null : !TIMER_EDEFAULT.equals(timer);
      case Esper2MaudePackage.WHERE_FILTER__NUM:
        return num != NUM_EDEFAULT;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_OP_R:
        return filterOpR != null;
      case Esper2MaudePackage.WHERE_FILTER__FILTER_EVENT_R:
        return filterEventR != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (timer: ");
    result.append(timer);
    result.append(", num: ");
    result.append(num);
    result.append(')');
    return result.toString();
  }

} //WhereFilterImpl
