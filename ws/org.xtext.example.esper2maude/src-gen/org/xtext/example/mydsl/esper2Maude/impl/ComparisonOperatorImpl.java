/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.esper2Maude.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.esper2Maude.ComparisonOperator;
import org.xtext.example.mydsl.esper2Maude.Esper2MaudePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comparison Operator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getGt <em>Gt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getGe <em>Ge</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getEq <em>Eq</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getNeq <em>Neq</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getLt <em>Lt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper2Maude.impl.ComparisonOperatorImpl#getLe <em>Le</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComparisonOperatorImpl extends MinimalEObjectImpl.Container implements ComparisonOperator
{
  /**
   * The default value of the '{@link #getGt() <em>Gt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGt()
   * @generated
   * @ordered
   */
  protected static final String GT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGt() <em>Gt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGt()
   * @generated
   * @ordered
   */
  protected String gt = GT_EDEFAULT;

  /**
   * The default value of the '{@link #getGe() <em>Ge</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGe()
   * @generated
   * @ordered
   */
  protected static final String GE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGe() <em>Ge</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGe()
   * @generated
   * @ordered
   */
  protected String ge = GE_EDEFAULT;

  /**
   * The default value of the '{@link #getEq() <em>Eq</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEq()
   * @generated
   * @ordered
   */
  protected static final String EQ_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEq() <em>Eq</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEq()
   * @generated
   * @ordered
   */
  protected String eq = EQ_EDEFAULT;

  /**
   * The default value of the '{@link #getNeq() <em>Neq</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeq()
   * @generated
   * @ordered
   */
  protected static final String NEQ_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNeq() <em>Neq</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeq()
   * @generated
   * @ordered
   */
  protected String neq = NEQ_EDEFAULT;

  /**
   * The default value of the '{@link #getLt() <em>Lt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLt()
   * @generated
   * @ordered
   */
  protected static final String LT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLt() <em>Lt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLt()
   * @generated
   * @ordered
   */
  protected String lt = LT_EDEFAULT;

  /**
   * The default value of the '{@link #getLe() <em>Le</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLe()
   * @generated
   * @ordered
   */
  protected static final String LE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLe() <em>Le</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLe()
   * @generated
   * @ordered
   */
  protected String le = LE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComparisonOperatorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Esper2MaudePackage.Literals.COMPARISON_OPERATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGt()
  {
    return gt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGt(String newGt)
  {
    String oldGt = gt;
    gt = newGt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__GT, oldGt, gt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGe()
  {
    return ge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGe(String newGe)
  {
    String oldGe = ge;
    ge = newGe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__GE, oldGe, ge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEq()
  {
    return eq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEq(String newEq)
  {
    String oldEq = eq;
    eq = newEq;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__EQ, oldEq, eq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNeq()
  {
    return neq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNeq(String newNeq)
  {
    String oldNeq = neq;
    neq = newNeq;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__NEQ, oldNeq, neq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLt()
  {
    return lt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLt(String newLt)
  {
    String oldLt = lt;
    lt = newLt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__LT, oldLt, lt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLe()
  {
    return le;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLe(String newLe)
  {
    String oldLe = le;
    le = newLe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Esper2MaudePackage.COMPARISON_OPERATOR__LE, oldLe, le));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.COMPARISON_OPERATOR__GT:
        return getGt();
      case Esper2MaudePackage.COMPARISON_OPERATOR__GE:
        return getGe();
      case Esper2MaudePackage.COMPARISON_OPERATOR__EQ:
        return getEq();
      case Esper2MaudePackage.COMPARISON_OPERATOR__NEQ:
        return getNeq();
      case Esper2MaudePackage.COMPARISON_OPERATOR__LT:
        return getLt();
      case Esper2MaudePackage.COMPARISON_OPERATOR__LE:
        return getLe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.COMPARISON_OPERATOR__GT:
        setGt((String)newValue);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__GE:
        setGe((String)newValue);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__EQ:
        setEq((String)newValue);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__NEQ:
        setNeq((String)newValue);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__LT:
        setLt((String)newValue);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__LE:
        setLe((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.COMPARISON_OPERATOR__GT:
        setGt(GT_EDEFAULT);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__GE:
        setGe(GE_EDEFAULT);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__EQ:
        setEq(EQ_EDEFAULT);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__NEQ:
        setNeq(NEQ_EDEFAULT);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__LT:
        setLt(LT_EDEFAULT);
        return;
      case Esper2MaudePackage.COMPARISON_OPERATOR__LE:
        setLe(LE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Esper2MaudePackage.COMPARISON_OPERATOR__GT:
        return GT_EDEFAULT == null ? gt != null : !GT_EDEFAULT.equals(gt);
      case Esper2MaudePackage.COMPARISON_OPERATOR__GE:
        return GE_EDEFAULT == null ? ge != null : !GE_EDEFAULT.equals(ge);
      case Esper2MaudePackage.COMPARISON_OPERATOR__EQ:
        return EQ_EDEFAULT == null ? eq != null : !EQ_EDEFAULT.equals(eq);
      case Esper2MaudePackage.COMPARISON_OPERATOR__NEQ:
        return NEQ_EDEFAULT == null ? neq != null : !NEQ_EDEFAULT.equals(neq);
      case Esper2MaudePackage.COMPARISON_OPERATOR__LT:
        return LT_EDEFAULT == null ? lt != null : !LT_EDEFAULT.equals(lt);
      case Esper2MaudePackage.COMPARISON_OPERATOR__LE:
        return LE_EDEFAULT == null ? le != null : !LE_EDEFAULT.equals(le);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (gt: ");
    result.append(gt);
    result.append(", ge: ");
    result.append(ge);
    result.append(", eq: ");
    result.append(eq);
    result.append(", neq: ");
    result.append(neq);
    result.append(", lt: ");
    result.append(lt);
    result.append(", le: ");
    result.append(le);
    result.append(')');
    return result.toString();
  }

} //ComparisonOperatorImpl
