/*
 * generated by Xtext 2.10.0
 */
grammar InternalEsper2Maude;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.Esper2MaudeGrammarAccess;

}
@parser::members {
	private Esper2MaudeGrammarAccess grammarAccess;

	public void setGrammarAccess(Esper2MaudeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getPatternsAssignment()); }
		(rule__Model__PatternsAssignment)*
		{ after(grammarAccess.getModelAccess().getPatternsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonLastSelectEntry
entryRuleNonLastSelectEntry
:
{ before(grammarAccess.getNonLastSelectEntryRule()); }
	 ruleNonLastSelectEntry
{ after(grammarAccess.getNonLastSelectEntryRule()); } 
	 EOF 
;

// Rule NonLastSelectEntry
ruleNonLastSelectEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonLastSelectEntryAccess().getGroup()); }
		(rule__NonLastSelectEntry__Group__0)
		{ after(grammarAccess.getNonLastSelectEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLastSelectEntry
entryRuleLastSelectEntry
:
{ before(grammarAccess.getLastSelectEntryRule()); }
	 ruleLastSelectEntry
{ after(grammarAccess.getLastSelectEntryRule()); } 
	 EOF 
;

// Rule LastSelectEntry
ruleLastSelectEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLastSelectEntryAccess().getEntryAssignment()); }
		(rule__LastSelectEntry__EntryAssignment)
		{ after(grammarAccess.getLastSelectEntryAccess().getEntryAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectEntry
entryRuleSelectEntry
:
{ before(grammarAccess.getSelectEntryRule()); }
	 ruleSelectEntry
{ after(grammarAccess.getSelectEntryRule()); } 
	 EOF 
;

// Rule SelectEntry
ruleSelectEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectEntryAccess().getAlternatives()); }
		(rule__SelectEntry__Alternatives)
		{ after(grammarAccess.getSelectEntryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroupOp
entryRuleGroupOp
:
{ before(grammarAccess.getGroupOpRule()); }
	 ruleGroupOp
{ after(grammarAccess.getGroupOpRule()); } 
	 EOF 
;

// Rule GroupOp
ruleGroupOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupOpAccess().getAlternatives()); }
		(rule__GroupOp__Alternatives)
		{ after(grammarAccess.getGroupOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getGroup_0()); }
		(rule__SelectEntry__Group_0__0)
		{ after(grammarAccess.getSelectEntryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectEntryAccess().getGroup_1()); }
		(rule__SelectEntry__Group_1__0)
		{ after(grammarAccess.getSelectEntryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getFieldAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getGroup_1()); }
		(rule__Field__Group_1__0)
		{ after(grammarAccess.getFieldAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupOpAccess().getCountKeyword_0()); }
		'count'
		{ after(grammarAccess.getGroupOpAccess().getCountKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getGroupOpAccess().getMaxKeyword_1()); }
		'max'
		{ after(grammarAccess.getGroupOpAccess().getMaxKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getGroupOpAccess().getMinKeyword_2()); }
		'min'
		{ after(grammarAccess.getGroupOpAccess().getMinKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getNameKeyword_0()); }
	'@Name('
	{ after(grammarAccess.getPatternAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getNameAssignment_1()); }
	(rule__Pattern__NameAssignment_1)
	{ after(grammarAccess.getPatternAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getPatternAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__3__Impl
	rule__Pattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getInsertIntoKeyword_3()); }
	'insert into'
	{ after(grammarAccess.getPatternAccess().getInsertIntoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__4__Impl
	rule__Pattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEventAssignment_4()); }
	(rule__Pattern__EventAssignment_4)
	{ after(grammarAccess.getPatternAccess().getEventAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__5__Impl
	rule__Pattern__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getSelectKeyword_5()); }
	'select'
	{ after(grammarAccess.getPatternAccess().getSelectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__6__Impl
	rule__Pattern__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getSelectEntriesAssignment_6()); }
	(rule__Pattern__SelectEntriesAssignment_6)*
	{ after(grammarAccess.getPatternAccess().getSelectEntriesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__7__Impl
	rule__Pattern__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getSelectEntryAssignment_7()); }
	(rule__Pattern__SelectEntryAssignment_7)
	{ after(grammarAccess.getPatternAccess().getSelectEntryAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__8__Impl
	rule__Pattern__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getFromKeyword_8()); }
	'from'
	{ after(grammarAccess.getPatternAccess().getFromKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroupByKeyword_9()); }
	('group by')?
	{ after(grammarAccess.getPatternAccess().getGroupByKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLastSelectEntry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLastSelectEntry__Group__0__Impl
	rule__NonLastSelectEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLastSelectEntry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLastSelectEntryAccess().getEntryAssignment_0()); }
	(rule__NonLastSelectEntry__EntryAssignment_0)
	{ after(grammarAccess.getNonLastSelectEntryAccess().getEntryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLastSelectEntry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLastSelectEntry__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLastSelectEntry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLastSelectEntryAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getNonLastSelectEntryAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_0__0__Impl
	rule__SelectEntry__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getFieldAssignment_0_0()); }
	(rule__SelectEntry__FieldAssignment_0_0)
	{ after(grammarAccess.getSelectEntryAccess().getFieldAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getGroup_0_1()); }
	(rule__SelectEntry__Group_0_1__0)?
	{ after(grammarAccess.getSelectEntryAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_0_1__0__Impl
	rule__SelectEntry__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getAsKeyword_0_1_0()); }
	'as'
	{ after(grammarAccess.getSelectEntryAccess().getAsKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getAliasAssignment_0_1_1()); }
	(rule__SelectEntry__AliasAssignment_0_1_1)
	{ after(grammarAccess.getSelectEntryAccess().getAliasAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1__0__Impl
	rule__SelectEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getGroupOpAssignment_1_0()); }
	(rule__SelectEntry__GroupOpAssignment_1_0)
	{ after(grammarAccess.getSelectEntryAccess().getGroupOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1__1__Impl
	rule__SelectEntry__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSelectEntryAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1__2__Impl
	rule__SelectEntry__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getFieldAssignment_1_2()); }
	(rule__SelectEntry__FieldAssignment_1_2)
	{ after(grammarAccess.getSelectEntryAccess().getFieldAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1__3__Impl
	rule__SelectEntry__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSelectEntryAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getGroup_1_4()); }
	(rule__SelectEntry__Group_1_4__0)?
	{ after(grammarAccess.getSelectEntryAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectEntry__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1_4__0__Impl
	rule__SelectEntry__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getAsKeyword_1_4_0()); }
	'as'
	{ after(grammarAccess.getSelectEntryAccess().getAsKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectEntry__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectEntryAccess().getAliasAssignment_1_4_1()); }
	(rule__SelectEntry__AliasAssignment_1_4_1)
	{ after(grammarAccess.getSelectEntryAccess().getAliasAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__0__Impl
	rule__Field__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getEKeyword_1_0()); }
	'e.'
	{ after(grammarAccess.getFieldAccess().getEKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1_1()); }
	(rule__Field__NameAssignment_1_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PatternsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPatternsPatternParserRuleCall_0()); }
		rulePattern
		{ after(grammarAccess.getModelAccess().getPatternsPatternParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPatternAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__EventAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getEventIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getPatternAccess().getEventIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__SelectEntriesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getSelectEntriesNonLastSelectEntryParserRuleCall_6_0()); }
		ruleNonLastSelectEntry
		{ after(grammarAccess.getPatternAccess().getSelectEntriesNonLastSelectEntryParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__SelectEntryAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getSelectEntryLastSelectEntryParserRuleCall_7_0()); }
		ruleLastSelectEntry
		{ after(grammarAccess.getPatternAccess().getSelectEntryLastSelectEntryParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLastSelectEntry__EntryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLastSelectEntryAccess().getEntrySelectEntryParserRuleCall_0_0()); }
		ruleSelectEntry
		{ after(grammarAccess.getNonLastSelectEntryAccess().getEntrySelectEntryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastSelectEntry__EntryAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastSelectEntryAccess().getEntrySelectEntryParserRuleCall_0()); }
		ruleSelectEntry
		{ after(grammarAccess.getLastSelectEntryAccess().getEntrySelectEntryParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__FieldAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getFieldFieldParserRuleCall_0_0_0()); }
		ruleField
		{ after(grammarAccess.getSelectEntryAccess().getFieldFieldParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__AliasAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getAliasIDTerminalRuleCall_0_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSelectEntryAccess().getAliasIDTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__GroupOpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getGroupOpGroupOpParserRuleCall_1_0_0()); }
		ruleGroupOp
		{ after(grammarAccess.getSelectEntryAccess().getGroupOpGroupOpParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__FieldAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getFieldFieldParserRuleCall_1_2_0()); }
		ruleField
		{ after(grammarAccess.getSelectEntryAccess().getFieldFieldParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectEntry__AliasAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectEntryAccess().getAliasIDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSelectEntryAccess().getAliasIDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
